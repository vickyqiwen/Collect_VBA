# Reading a text file

filename = 'mobi_dick.txt'
file = open( filename , mode = ' r ' )  # 'r ' is to read
# OR
file = open ( filename, mode = ' w ' ) # ' w ' is to write
text = file.read()
# Printing a text file
print(text)
file.close()

# context manager "with",you don't need to close the file 

with open('mobi_dick.txt', ' r ')  as file:
print(file.read()) 

---------------exercise one ---------
# Open a file: file


file = open('moby_dick.txt', mode= 'r' )



# Print it



print(file.read())



# Close file


file.close()




# Check whether file is closed


print(file.closed)



---------------exercise two-------
# Read & print the first 3 lines


with open('moby_dick.txt') as file: 
  
  print(file.readline())
  
  print(file.readline())
  
  print(file.readline())


_____________________________________
# Importance of flat file 
#table data
#text and number
# For example : titanic.csv 
#.csv - Comma separated values
#.txt --text file
# Two main packages: Numpy , pandas
_____________________________________________
#importing flat files using Numpy
#Numpu arrays: standard for storin numerical data
#Essential for other packages: e.g. scikit-learn ( a machine learning package)

import numpy as np
filename = 'MNIST.txt'
data = np.loadtxt(filename, delimiter = ' , ')
data
#Or customizing your Numpy import
data = np.loadtxt(filename, delimiter = ' ,' , skiprow = 1, usecols =[0, 2] )
print(data)




===================
# Create the areas list

areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]



# Print out second element from areas


print(areas[1])


# Print out last element from areas

print(areas[-1])


# Print out the area of the living room

print(areas[6])

******it may conclude zero in order

# Create the areas list


areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]



# Use slicing to create downstairs


downstairs = areas[0:6]

 

## <script.py> output:
    ['hallway', 11.25, 'kitchen', 18.0, 'living room', 20.0]

# Use slicing to create upstairs

upstairs = areas[6:10]


## <script.py> output:
   ['bedroom', 10.75, 'bathroom', 9.5]



# Print out downstairs and upstairs


print (downstairs)

print (upstairs)

-----same shit -----
# Create the areas list

areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]



# Alternative slicing to create downstairs

downstairs = areas[:6]


# Alternative slicing to create upstairs

upstairs = areas[6:]

--------------------------------------
# Create the areas list

areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]



# Correct the bathroom area

areas[-1] = 10.50


# Change "living room" to "chill zone"

areas[4] = 'chill zone'

In [6]: print(areas)
['hallway', 11.25, 'kitchen', 18.0, 'chill zone', 20.0, 'bedroom', 10.75, 'bathroom', 10.5]


_____Add new ___Extend a List______________

# Create the areas list and make some changes


areas = ["hallway", 11.25, "kitchen", 18.0, "chill zone", 20.0,
 "bedroom", 10.75, "bathroom", 10.50]



# Add poolhouse data to areas, new list is areas_1

areas_1 = areas + ["poolhouse" , 24.5]



# Add garage data to areas_1, new list is areas_2


areas_2 = areas_1 + ["garage" , 15.45]

______Use special sign to put command in same line____
# Same line
command1; command2

# Separate lines
command1
command2
__________________________________________________________________

del(areas[-3]); del(areas[-3])

##    same as ##
del(areas[-4:-2])
_________________________________________________________________
# Create list areas

areas = [11.25, 18.0, 20.0, 10.75, 9.50]



# Create areas_copy

areas_copy = areas[0:5]


Or 


areas_copy = list(areas)

# Change areas_copy

areas_copy[0] = 5.0



# Print areas

print(areas)


-----help(str)------
# string to experiment with: 
room
room = "poolhouse"



# Use upper() on room: room_up


room_up = room.upper()



# Print out room and room_up
print(room)


print(room_up)



# Print out the number of o's in room


print(room.count("o"))

---------index and count------
# Create list areas


areas = [11.25, 18.0, 20.0, 10.75, 9.50]



# Print out the index of the element 20.0


print(areas.index(20.0))



# Print out how often 14.5 appears in areas


print(areas.count(14.5))

